"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var cloneCarouselItems = function cloneCarouselItems(children, itemsInSlide, props) {
  var items = itemsInSlide;
  var stagePadding = props.stagePadding,
      infinite = props.infinite;

  var _getStagePadding = getStagePadding({ stagePadding: stagePadding }),
      paddingLeft = _getStagePadding.paddingLeft,
      paddingRight = _getStagePadding.paddingRight;

  if (infinite) {
    if (paddingLeft || paddingRight) {
      if (itemsInSlide < children.length) {
        items = itemsInSlide + 1;
      } else {
        var lastElement = children.slice(-1);
        var firstElement = children.slice(0, 1);
        var _clonesBefore = lastElement.concat(children);
        var _clonesAfter = children.concat(firstElement);

        return [].concat(_clonesBefore, children, _clonesAfter);
      }
    }
  }
  var clonesAfter = children.slice(0, items);
  var clonesBefore = children.slice(children.length - items);

  return [].concat(clonesBefore, children, clonesAfter);
};

var getElementWidth = function getElementWidth(element) {
  if (element && element.getBoundingClientRect) {
    return element.getBoundingClientRect().width;
  }
};

var getSlides = function getSlides(_ref) {
  var children = _ref.children,
      _ref$items = _ref.items,
      items = _ref$items === undefined ? [] : _ref$items;

  return children && children.length ? children : items;
};

var isInactiveItem = function isInactiveItem(props) {
  var _ref2 = props || {},
      items = _ref2.items,
      currentIndex = _ref2.currentIndex,
      infinite = _ref2.infinite,
      _ref2$slides = _ref2.slides,
      slides = _ref2$slides === undefined ? [] : _ref2$slides;

  var inactivePrev = infinite === false && currentIndex === 0;
  var inactiveNext = infinite === false && slides.length - items === currentIndex;

  return { inactivePrev: inactivePrev, inactiveNext: inactiveNext };
};

var getStagePadding = function getStagePadding(props) {
  var _ref3 = props || {},
      stagePadding = _ref3.stagePadding;

  var paddingLeft = Math.abs(stagePadding.paddingLeft) || 0;
  var paddingRight = Math.abs(stagePadding.paddingRight) || 0;

  return { paddingLeft: paddingLeft, paddingRight: paddingRight };
};

var getItemWidth = function getItemWidth() {
  var galleryWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var totalItems = arguments[1];

  var width = Number(galleryWidth);
  var items = Number(totalItems);
  return width && items > 0 ? width / items : 0;
};

var getSlideInfo = function getSlideInfo(index, slidesLength) {
  var slideIndex = index + 1;

  if (slideIndex < 1) {
    slideIndex = slidesLength;
  } else if (slideIndex > slidesLength) {
    slideIndex = 1;
  }

  return { slideIndex: slideIndex, slidesLength: slidesLength };
};

var getNextItemIndexBeforeTouchEnd = function getNextItemIndexBeforeTouchEnd(currentTranslateXPosition, state) {
  var _ref4 = state || {},
      infinite = _ref4.infinite,
      items = _ref4.items,
      itemWidth = _ref4.itemWidth,
      _ref4$slides = _ref4.slides,
      slides = _ref4$slides === undefined ? [] : _ref4$slides,
      _ref4$stagePadding = _ref4.stagePadding,
      stagePadding = _ref4$stagePadding === undefined ? {} : _ref4$stagePadding;

  var paddingLeft = stagePadding.paddingLeft,
      paddingRight = stagePadding.paddingRight;

  var currInd = currentTranslateXPosition / -itemWidth - items;

  if (infinite) {
    if (paddingLeft || paddingRight) {
      currInd -= 1;
    }
  }

  if (currInd === slides.length) {
    return 0;
  }
  if (currInd < 0) {
    return slides.length + currInd;
  }

  return currInd;
};

exports.getElementWidth = getElementWidth;
exports.getSlides = getSlides;
exports.getStagePadding = getStagePadding;
exports.getItemWidth = getItemWidth;
exports.getSlideInfo = getSlideInfo;
exports.cloneCarouselItems = cloneCarouselItems;
exports.isInactiveItem = isInactiveItem;
exports.getNextItemIndexBeforeTouchEnd = getNextItemIndexBeforeTouchEnd;